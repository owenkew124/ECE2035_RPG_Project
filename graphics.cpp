#include "graphics.h"

#include "globals.h"

/*
In this file put all your graphical functions (don't forget to declare them first
in graphics.h). So when you want to draw something use this file. One cool function
to look at would be uLCD.blit() there are more like filled_rectangle etc... 
https://os.mbed.com/users/4180_1/notebook/ulcd-144-g2-128-by-128-color-lcd/
This website is a good resource.
*/

//Sprite for the monster
int fire[121] = {
0xbfbfbf, 0xbfbfbf, 0xbfbfbf, 0xffffff, 0x00faff, 0xffffff, 0xffffff, 0xbfbfbf, 0xbfbfbf, 0xbfbfbf, 0xbfbfbf, 
0xbfbfbf, 0xbfbfbf, 0x00faff, 0x007eff, 0x0000ff, 0x0000ff, 0x007eff, 0x00faff, 0xbfbfbf, 0xbfbfbf, 0xbfbfbf, 
0xbfbfbf, 0x00faff, 0x007eff, 0x0000ff, 0x007eff, 0x0000ff, 0x007eff, 0x007eff, 0x00faff, 0xbfbfbf, 0xbfbfbf, 
0xbfbfbf, 0x00faff, 0x0000ff, 0x0000ff, 0x007eff, 0x007eff, 0x0000ff, 0x0000ff, 0x0000ff, 0xbfbfbf, 0xbfbfbf, 
0xbfbfbf, 0x0000ff, 0x007eff, 0x007eff, 0x007eff, 0x00faff, 0x007eff, 0x007eff, 0x0000ff, 0xbfbfbf, 0xbfbfbf, 
0xbfbfbf, 0x0000ff, 0x007eff, 0x00faff, 0x00faff, 0xffffff, 0x00faff, 0x007eff, 0x0000ff, 0x0000ff, 0xbfbfbf, 
0xbfbfbf, 0x0000ff, 0x007eff, 0x00faff, 0x00faff, 0xffffff, 0x00faff, 0x007eff, 0x007eff, 0x0000ff, 0xbfbfbf, 
0xbfbfbf, 0x0000ff, 0x007eff, 0x007eff, 0x00faff, 0x00faff, 0x00faff, 0x00faff, 0x007eff, 0x0000ff, 0xbfbfbf, 
0xbfbfbf, 0x0000ff, 0x007eff, 0x007eff, 0x007eff, 0x007eff, 0x007eff, 0x007eff, 0x007eff, 0x0000ff, 0xbfbfbf, 
0xbfbfbf, 0x0000ff, 0x0000ff, 0x007eff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0xbfbfbf, 
0xbfbfbf, 0xbfbfbf, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0xbfbfbf, 0xbfbfbf
};
//Sprite for the NPC
int NPC[121] = {
0x00000000, 0x00000000, 0x00000000, 0xff0000ff, 0xff0000ff, 0xff0000ff, 0xff0000ff, 0xff0000ff, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0xff00ff20, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xff00ff20, 0x00000000, 0x00000000, 
0x00000000, 0xff00ff20, 0x00000000, 0xffffffff, 0xff000000, 0xffffffff, 0xff000000, 0xffffffff, 0x00000000, 0xff00ff20, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0xff0000ff, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0xffffffff, 0xff000088, 0xff000088, 0xff000088, 0xffffffff, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0xff0000fe, 0xff0000ff, 0xff0000ff, 0xffe60200, 0xffe60200, 0xffe60200, 0xff0000ff, 0xff0000ff, 0xff0000fe, 0x00000000, 
0x00000000, 0xff0000fe, 0xff0000ff, 0xffe60200, 0xffe60200, 0xffe60200, 0xffe60200, 0xffe60200, 0xff0000ff, 0xff0000fe, 0x00000000, 
0x00000000, 0x00000000, 0xffffffff, 0xff0000ff, 0xffe60200, 0xffe60200, 0xffe60200, 0xff0000ff, 0xffffffff, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0xff0000ff, 0xffe60200, 0xff0000ff, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000
};
//Sprite for the portal
int portal[121] = {
0xff949494, 0xff949494, 0xff949494, 0xff949494, 0xff949494, 0xff949494, 0xff949494, 0xff949494, 0xff949494, 0xff949494, 0xff949494, 
0xff949494, 0xff0000ff, 0xff0000ff, 0xff0000ff, 0xff0000ff, 0xff0000ff, 0xff0000ff, 0xff0000ff, 0xff0000ff, 0xff0000ff, 0xff949494, 
0xff949494, 0xff0000ff, 0xff6262ff, 0xff6262ff, 0xff6262ff, 0xff6262ff, 0xff6262ff, 0xff6262ff, 0xff0000ff, 0xff0000ff, 0xff949494, 
0xff949494, 0xff0000ff, 0xff0000ff, 0xff0000ff, 0xff0000ff, 0xff0000ff, 0xff0000ff, 0xff6262ff, 0xff6262ff, 0xff0000ff, 0xff949494, 
0xff949494, 0xff0000ff, 0xff0000ff, 0xff6262ff, 0xff6262ff, 0xff6262ff, 0xff0000ff, 0xff0000ff, 0xff6262ff, 0xff0000ff, 0xff949494, 
0xff949494, 0xff0000ff, 0xff6262ff, 0xff6262ff, 0xff0000ff, 0xff6262ff, 0xff6262ff, 0xff0000ff, 0xff6262ff, 0xff0000ff, 0xff949494, 
0xff949494, 0xff0000ff, 0xff6262ff, 0xff0000ff, 0xff0000ff, 0xff0000ff, 0xff6262ff, 0xff0000ff, 0xff6262ff, 0xff0000ff, 0xff949494, 
0xff949494, 0xff0000ff, 0xff6262ff, 0xff6262ff, 0xff0000ff, 0xff0000ff, 0xff0000ff, 0xff0000ff, 0xff6262ff, 0xff0000ff, 0xff949494, 
0xff949494, 0xff0000ff, 0xff0000ff, 0xff6262ff, 0xff6262ff, 0xff6262ff, 0xff6262ff, 0xff6262ff, 0xff6262ff, 0xff0000ff, 0xff949494, 
0xff949494, 0xff0000ff, 0xff0000ff, 0xff0000ff, 0xff0000ff, 0xff0000ff, 0xff0000ff, 0xff0000ff, 0xff0000ff, 0xff0000ff, 0xff949494, 
0xff949494, 0xff949494, 0xff949494, 0xff949494, 0xff949494, 0xff949494, 0xff949494, 0xff949494, 0xff949494, 0xff949494, 0xff949494
};
//Sprite for the wall
int wall[121] = {
0xff5f5f5f, 0xff5f5f5f, 0xff0e0e0f, 0xff5f5f5f, 0xff5f5f5f, 0xff5f5f5f, 0xff3f3f42, 0xff5f5f5f, 0xff5f5f5f, 0xff242425, 0xff5f5f5f, 
0xff878787, 0xff3f3f42, 0xff5f5f5f, 0xff626263, 0xff79797c, 0xff5f5f5f, 0xff5f5f5f, 0xff626263, 0xff878787, 0xff5f5f5f, 0xff5f5f5f, 
0xff5f5f5f, 0xff5f5f5f, 0xff333333, 0xff333333, 0xff333333, 0xff333333, 0xff0e0e0f, 0xff5f5f5f, 0xff5f5f5f, 0xff626263, 0xff5f5f5f, 
0xff5f5f5f, 0xff242425, 0xff5f5f5f, 0xff79797c, 0xff79797c, 0xff5f5f5f, 0xff79797c, 0xff79797c, 0xff5f5f5f, 0xff5f5f5f, 0xff878787, 
0xff5f5f5f, 0xff626263, 0xff242425, 0xff5f5f5f, 0xff5f5f5f, 0xff333333, 0xff333333, 0xff333333, 0xff333333, 0xff5f5f5f, 0xff878787, 
0xff878787, 0xff5f5f5f, 0xff5f5f5f, 0xff5f5f5f, 0xff3f3f42, 0xff5f5f5f, 0xff626263, 0xff79797c, 0xff5f5f5f, 0xff5f5f5f, 0xff3f3f42, 
0xff5f5f5f, 0xff242425, 0xff616161, 0xff79797c, 0xff626263, 0xff5f5f5f, 0xff878787, 0xff5f5f5f, 0xff5f5f5f, 0xff3f3f42, 0xff5f5f5f, 
0xff5f5f5f, 0xff5f5f5f, 0xff333333, 0xff333333, 0xff333333, 0xff333333, 0xff5f5f5f, 0xff0e0e0f, 0xff5f5f5f, 0xff5f5f5f, 0xff5f5f5f, 
0xff626263, 0xff5f5f5f, 0xff5f5f5f, 0xff626263, 0xff79797c, 0xff5f5f5f, 0xff5f5f5f, 0xff626263, 0xff79797c, 0xff5f5f5f, 0xff878787, 
0xff5f5f5f, 0xff0e0e0f, 0xff5f5f5f, 0xff5f5f5f, 0xff5f5f5f, 0xff5f5f5f, 0xff333333, 0xff333333, 0xff333333, 0xff333333, 0xff5f5f5f, 
0xff878787, 0xff5f5f5f, 0xff626263, 0xff3f3f42, 0xff3f3f42, 0xff5f5f5f, 0xff242425, 0xff5f5f5f, 0xff242425, 0xff5f5f5f, 0xff5f5f5f
};
//Sprite for the chest
int chest[121] = {
0xff008fab, 0xff008fab, 0xff008fab, 0xff008fab, 0xff008fab, 0xff008fab, 0xff008fab, 0xff008fab, 0xff008fab, 0xff008fab, 0xff008fab, 
0xff008fab, 0xff015767, 0xff015767, 0xff015767, 0xff015767, 0xff015767, 0xff015767, 0xff015767, 0xff015767, 0xff015767, 0xff008fab, 
0xff008fab, 0xff015767, 0xff015767, 0xff015767, 0xff015767, 0xff015767, 0xff015767, 0xff015767, 0xff015767, 0xff015767, 0xff008fab, 
0xff008fab, 0xff015767, 0xff015767, 0xff02313a, 0xff02313a, 0xff02313a, 0xff02313a, 0xff02313a, 0xff015767, 0xff015767, 0xff008fab, 
0xff008fab, 0xff015767, 0xff015767, 0xff02313a, 0xff017990, 0xff017990, 0xff017990, 0xff02313a, 0xff015767, 0xff015767, 0xff008fab, 
0xff008fab, 0xff015767, 0xff015767, 0xff02313a, 0xff017990, 0xff008fab, 0xff017990, 0xff02313a, 0xff015767, 0xff015767, 0xff008fab, 
0xff008fab, 0xff015767, 0xff015767, 0xff02313a, 0xff017990, 0xff017990, 0xff017990, 0xff02313a, 0xff015767, 0xff015767, 0xff008fab, 
0xff008fab, 0xff015767, 0xff015767, 0xff02313a, 0xff02313a, 0xff02313a, 0xff02313a, 0xff02313a, 0xff015767, 0xff015767, 0xff008fab, 
0xff008fab, 0xff015767, 0xff015767, 0xff015767, 0xff015767, 0xff015767, 0xff015767, 0xff015767, 0xff015767, 0xff015767, 0xff008fab, 
0xff008fab, 0xff008fab, 0xff008fab, 0xff008fab, 0xff00d6ff, 0xff00d6ff, 0xff00d6ff, 0xff008fab, 0xff008fab, 0xff008fab, 0xff008fab, 
0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff00d6ff, 0xff00d6ff, 0xff00d6ff, 0xff000000, 0xff000000, 0xff000000, 0xff000000
};
//Next 4 sprites are for the players walking/running animation
int player_1[121] = {
0x00000000, 0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0xff000000, 0xffffffff, 0xff000000, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffff3500, 0xffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffffff, 0x00000000, 0xffffffff, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0xffffffff, 0x00000000, 0x00000000, 0x00000000, 0xffffffff, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0xffffffff, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffffff, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0xffffffff, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffffff, 0x00000000, 0x00000000
};
int player_2[121] = {
0x00000000, 0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0xff000000, 0xffffffff, 0xff000000, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffff3500, 0xffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffffff, 0x00000000, 0xffffffff, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffffff, 0x00000000, 0xffffffff, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffffff, 0x00000000, 0xffffffff, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffffff, 0x00000000, 0xffffffff, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffffff, 0x00000000, 0xffffffff, 0x00000000, 0x00000000, 0x00000000, 0x00000000
};
int player_3[121] = {
0x00000000, 0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0xff000000, 0xffffffff, 0xff000000, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffff3500, 0xffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0xffffffff, 0xff585858, 0xff989898, 0xff585858, 0xffffffff, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0xffffffff, 0xff989898, 0xff585858, 0xff989898, 0xffffffff, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0xffffffff, 0xff585858, 0xff989898, 0xff585858, 0xffffffff, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 0x00000000, 0x00000000
};
int player_4[121] = {
0x00000000, 0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0xff000000, 0xffffffff, 0xff000000, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffff3500, 0xffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0xffffffff, 0xff989898, 0xff585858, 0xff989898, 0xffffffff, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0xffffffff, 0xff585858, 0xff585858, 0xff585858, 0xffffffff, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0xffffffff, 0xff989898, 0xff585858, 0xff989898, 0xffffffff, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 0x00000000, 0x00000000
};
//draws the player depending on the animiation frame and if the player is running
void draw_player(int u, int v, int key, int run, int keyframe)
{
    if (run == 0) { //if hes not running do the walk animation
        if (keyframe == 0) { //1st frame
             uLCD.BLIT(u, v, 11, 11, player_1);
            wait_us(250);  
        } else {//2nd frame
            uLCD.BLIT(u, v, 11, 11, player_2);
            wait_us(250);     
        }
    } else {//if he is running to the run aninimation
        if (keyframe == 0) {//1st frame
             uLCD.BLIT(u, v, 11, 11, player_3);
            wait_us(250);  
        } else {//2nd frame
            uLCD.BLIT(u, v, 11, 11, player_4);
            wait_us(250);     
        }
    }
}

#define YELLOW 0xFFFF00
#define BROWN  0xD2691E
#define DIRT   BROWN
#define LBROWN 0xB87705
#define CHEST  0x592A06
//Didn't use
void draw_img(int u, int v, const char* img)
{
    int colors[11*11];
    for (int i = 0; i < 11*11; i++)
    {
        if (img[i] == 'R') colors[i] = RED;
        else if (img[i] == 'Y') colors[i] = YELLOW;
        else if (img[i] == 'G') colors[i] = GREEN;
        else if (img[i] == 'D') colors[i] = DIRT;
        else if (img[i] == '5') colors[i] = LGREY;
        else if (img[i] == '3') colors[i] = DGREY;
        else colors[i] = BLACK;
    }
    uLCD.BLIT(u, v, 11, 11, colors);
    wait_us(250); // Recovery time!
}

void draw_nothing(int u, int v)
{
    // Fill a tile with Grass green
    uLCD.filled_rectangle(u, v, u+10, v+10, GREEN);
}
//Draw a wall with the wall sprite
void draw_wall(int u, int v)
{
    uLCD.BLIT(u, v, 11, 11, wall);
    wait_us(250); 
}
//Draw a dark green plant
void draw_plant(int u, int v)
{
    uLCD.filled_rectangle(u, v, u+10, v+10, DGREEN);
}
//Draw the upper status bar with health
void draw_upper_status(int h)
{
    // Draw bottom border of status bar
    uLCD.line(0, 9, 127, 9, WHITE);
    uLCD.color(0x000000);
    uLCD.set_font_size(1, 1);
    uLCD.locate(1, 1); //print the word health
    uLCD.printf("%c", 'H');
    uLCD.printf("%c", 'e');
    uLCD.printf("%c", 'a');
    uLCD.printf("%c", 'l');
    uLCD.printf("%c", 't');
    uLCD.printf("%c", 'h');
    uLCD.printf("%c", ':');
    uLCD.printf("%c", ' ');
    uLCD.printf("%d", h); // and the health of the player after
    // Add other status info drawing code here
}
//lower status bar with the player's coordinates
void draw_lower_status(int x, int y)
{
    // Draw top border of status bar
    uLCD.textbackground_color(0xFFFFFF);
    uLCD.color(0x000000);
    uLCD.filled_rectangle(0, 117, 127,  128, WHITE);
    uLCD.locate(1,15);
    uLCD.set_font_size(1, 1);
    uLCD.printf("%d", x); //drawn in the form x,y
    uLCD.printf("%c", ' ');
    uLCD.printf("%c", ',');
    uLCD.printf("%c", ' ');
    uLCD.printf("%d", y);
    // Add other status info drawing code here
}
//draw the border of the map
void draw_border()
{
    uLCD.filled_rectangle(0,     9, 127,  14, WHITE); // Top
    uLCD.filled_rectangle(0,    13,   2, 114, WHITE); // Left
    uLCD.filled_rectangle(0,   114, 127, 117, WHITE); // Bottom
    uLCD.filled_rectangle(124,  14, 127, 117, WHITE); // Right
}
//draw monster with the monster sprite
void draw_mon(int u, int v)
{
    uLCD.BLIT(u, v, 11, 11, fire);
    wait_us(250);  
}
//draw portal with the portal sprite
void draw_portal(int u, int v)
{   
    uLCD.BLIT(u, v, 11, 11, portal);
    wait_us(250);  
}
//draw the npc with the npc sprite
void draw_npc(int u, int v)
{   
    uLCD.BLIT(u, v, 11, 11, NPC);
    wait_us(250);  
}

//draw a light brown door
void draw_door(int u, int v)
{   
    uLCD.filled_rectangle(u, v, u+10, v+10, LBROWN);
}
//draw a chest with the chest sprite
void draw_chest(int u, int v) 
{
    uLCD.BLIT(u, v, 11, 11, chest);
    wait_us(250);  
}
//draw the side of the bridge
void draw_bridge_wall(int u, int v) {
    uLCD.filled_rectangle(u, v, u+10, v+10, 0xA57300); 
}
//draw the main part of the bridge
void draw_bridge(int u, int v) {
    uLCD.filled_rectangle(u, v, u+10, v+10, 0x5B4000); 
}
//draw the river
void draw_river(int u, int v) {
    uLCD.filled_rectangle(u, v, u+10, v+10, BLUE);
}